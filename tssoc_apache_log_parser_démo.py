# -*- coding: utf-8 -*-
"""TSSOC - Apache Log Parser - Démo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EaLhqRGUQhd4Zu3K3yaGJPhkp4-estt4

# Apache Log Parser

Récupération du fichier de log :
"""



"""Initialisation"""

from pprint import pprint

"""Récupérer les lignes du fichier dans une variable :"""

with open("./access.log", "r") as file_pointer:
  lines = file_pointer.readlines()

print(lines)

"""Extraire les données sur des lignes :"""

import re

log_regex = r"^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}) - - \[.+\] \"[^\"]+\" (\d{3}) \d+"

access_data = []
for line in lines:
  data = re.findall(log_regex, line)[0]
  access_data.append(data)

print(access_data)

"""Récupérer les adresses IP dans une liste à part :"""

# ip_list = []
# for ip, status_code in access_data:
#   ip_list.append(ip)

ip_list = [ip for ip, status_code in access_data]

print(ip_list)

"""## Objectif : Compter le nombre d'occurence dans une liste

**Méthode 1 :** Utiliser `Counter` du module `collections`
"""

from collections import Counter

print(Counter(ip_list))

"""**Methode 2 :** Y aller à la main !"""

ip_count = {}

for ip in ip_list:
  if ip not in ip_count:
    ip_count[ip] = 1
  else:
    ip_count[ip] += 1

print(ip_count)

"""## Objectif : Comtper les code retour/IP

**Etape 1 :** Initiliaser notre format.
"""

final_data = {}

"""**Etape 2 :** Créer le premier niveau (adresses IP)."""

for ip, status_code in access_data:
  final_data[ip] = {}

print(final_data)

"""**Etape 3 :** Créer le dernier niveau (codes retour)."""

for ip, status_code in access_data:
  if status_code not in final_data[ip]:
    final_data[ip][status_code] = 1
  else:
    final_data[ip][status_code] += 1

pprint(final_data)

"""# Exporter la donnée en JSON dans un fichier"""

import json

with open("access.json", "w") as json_file_pointer:
  json.dump(final_data, json_file_pointer)